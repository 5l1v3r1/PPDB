// Copyright (c) 2019 Aaron R Robinson

// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:

// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.

// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.

#include <cassert>

#define DEFINE_CORSYM_EXPORTS
#include "CorSym.hpp"

EXTERN_C CORSYM_EXPORTED HRESULT STDMETHODCALLTYPE CreateReader(ISymUnmanagedReader **reader)
{
    if (reader == nullptr)
        return -1;

    *reader = new SymUnmanagedReader();

    return 0;
}

// Define function for identifying IUnknown IID
template<>
bool IsIID<IUnknown *>(REFIID riid)
{
    static IID IID_IUnknown = { 0x00000000, 0x0000, 0x0000, { 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x46 } };
    return ::memcmp(&IID_IUnknown, &riid, sizeof(IID_IUnknown)) == 0;
}

// Define CorSym IID exports
EXTERN_GUID(IID_ISymUnmanagedBinder, 0xAA544D42, 0x28CB, 0x11d3, 0xBD, 0x22, 0x00, 0x00, 0xF8, 0x08, 0x49, 0xBD);
EXTERN_GUID(IID_ISymUnmanagedBinder2, 0xACCEE350, 0x89AF, 0x4ccb, 0x8B, 0x40, 0x1C, 0x2C, 0x4C, 0x6F, 0x94, 0x34);
EXTERN_GUID(IID_ISymUnmanagedBinder3, 0x28AD3D43, 0xB601, 0x4d26, 0x8A, 0x1B, 0x25, 0xF9, 0x16, 0x5A, 0xF9, 0xD7);
EXTERN_GUID(IID_ISymUnmanagedDispose, 0x969708D2, 0x05E5, 0x4861, 0xA3, 0xB0, 0x96, 0xE4, 0x73, 0xCD, 0xF6, 0x3F);
EXTERN_GUID(IID_ISymUnmanagedDocument, 0x40DE4037, 0x7C81, 0x3E1E, 0xB0, 0x22, 0xAE, 0x1A, 0xBF, 0xF2, 0xCA, 0x08);
EXTERN_GUID(IID_ISymUnmanagedDocumentWriter, 0xB01FAFEB, 0xC450, 0x3A4D, 0xBE, 0xEC, 0xB4, 0xCE, 0xEC, 0x01, 0xE0, 0x06);
EXTERN_GUID(IID_ISymUnmanagedMethod, 0xB62B923C, 0xB500, 0x3158, 0xA5, 0x43, 0x24, 0xF3, 0x07, 0xA8, 0xB7, 0xE1);
EXTERN_GUID(IID_ISymENCUnmanagedMethod, 0x85E891DA, 0xA631, 0x4c76, 0xAC, 0xA2, 0xA4, 0x4A, 0x39, 0xC4, 0x6B, 0x8C);
EXTERN_GUID(IID_ISymUnmanagedNamespace, 0x0DFF7289, 0x54F8, 0x11d3, 0xBD, 0x28, 0x00, 0x00, 0xF8, 0x08, 0x49, 0xBD);
EXTERN_GUID(IID_ISymUnmanagedReader, 0xB4CE6286, 0x2A6B, 0x3712, 0xA3, 0xB7, 0x1E, 0xE1, 0xDA, 0xD4, 0x67, 0xB5);
EXTERN_GUID(IID_ISymUnmanagedSourceServerModule, 0x997DD0CC, 0xA76F, 0x4c82, 0x8D, 0x79, 0xEA, 0x87, 0x55, 0x9D, 0x27, 0xAD);
EXTERN_GUID(IID_ISymUnmanagedENCUpdate, 0xE502D2DD, 0x8671, 0x4338, 0x8F, 0x2A, 0xFC, 0x08, 0x22, 0x96, 0x28, 0xC4);
EXTERN_GUID(IID_ISymUnmanagedReaderSymbolSearchInfo, 0x20D9645D, 0x03CD, 0x4e34, 0x9C, 0x11, 0x98, 0x48, 0xA5, 0xB0, 0x84, 0xF1);
EXTERN_GUID(IID_ISymUnmanagedScope, 0x68005D0F, 0xB8E0, 0x3B01, 0x84, 0xD5, 0xA1, 0x1A, 0x94, 0x15, 0x49, 0x42);
EXTERN_GUID(IID_ISymUnmanagedConstant, 0x48B25ED8, 0x5BAD, 0x41bc, 0x9C, 0xEE, 0xCD, 0x62, 0xFA, 0xBC, 0x74, 0xE9);
EXTERN_GUID(IID_ISymUnmanagedScope2, 0xAE932FBA, 0x3FD8, 0x4dba, 0x82, 0x32, 0x30, 0xA2, 0x30, 0x9B, 0x02, 0xDB);
EXTERN_GUID(IID_ISymUnmanagedVariable, 0x9F60EEBE, 0x2D9A, 0x3F7C, 0xBF, 0x58, 0x80, 0xBC, 0x99, 0x1C, 0x60, 0xBB);
EXTERN_GUID(IID_ISymUnmanagedSymbolSearchInfo, 0xF8B3534A, 0xA46B, 0x4980, 0xB5, 0x20, 0xBE, 0xC4, 0xAC, 0xEA, 0xBA, 0x8F);
EXTERN_GUID(IID_ISymUnmanagedWriter, 0xED14AA72, 0x78E2, 0x4884, 0x84, 0xE2, 0x33, 0x42, 0x93, 0xAE, 0x52, 0x14);
EXTERN_GUID(IID_ISymUnmanagedWriter2, 0x0B97726E, 0x9E6D, 0x4f05, 0x9A, 0x26, 0x42, 0x40, 0x22, 0x09, 0x3C, 0xAA);
EXTERN_GUID(IID_ISymUnmanagedWriter3, 0x12F1E02C, 0x1E05, 0x4B0E, 0x94, 0x68, 0xEB, 0xC9, 0xD1, 0xBB, 0x04, 0x0F);
EXTERN_GUID(IID_ISymUnmanagedWriter4, 0xBC7E3F53, 0xF458, 0x4C23, 0x9D, 0xBD, 0xA1, 0x89, 0xE6, 0xE9, 0x65, 0x94);
EXTERN_GUID(IID_ISymUnmanagedWriter5, 0xDCF7780D, 0xBDE9, 0x45DF, 0xAC, 0xFE, 0x21, 0x73, 0x1A, 0x32, 0x00, 0x0C);
EXTERN_GUID(IID_ISymUnmanagedReader2, 0xA09E53B2, 0x2A57, 0x4cca, 0x8F, 0x63, 0xB8, 0x4F, 0x7C, 0x35, 0xD4, 0xAA);
EXTERN_GUID(IID_ISymNGenWriter, 0xd682fd12, 0x43de, 0x411c, 0x81, 0x1b, 0xbe, 0x84, 0x04, 0xce, 0xa1, 0x26);
EXTERN_GUID(IID_ISymNGenWriter2, 0xB029E51B, 0x4C55, 0x4fe2, 0xB9, 0x93, 0x9F, 0x7B, 0xC1, 0xF1, 0x0D, 0xB4);
EXTERN_GUID(IID_ISymUnmanagedAsyncMethodPropertiesWriter, 0xFC073774, 0x1739, 0x4232, 0xBD, 0x56, 0xA0, 0x27, 0x29, 0x4B, 0xEC, 0x15);
EXTERN_GUID(IID_ISymUnmanagedAsyncMethod, 0xB20D55B3, 0x532E, 0x4906, 0x87, 0xE7, 0x25, 0xBD, 0x57, 0x34, 0xAB, 0xD2);
